#!/usr/bin/env python3
"""
Script para verificar se as fun√ß√µes de auto-instala√ß√£o do Prophet existem
"""
import os
from supabase import create_client, Client
from dotenv import load_dotenv

# Carregar vari√°veis de ambiente
load_dotenv('frontend/.env.local')

# Configura√ß√£o do Supabase
SUPABASE_URL = os.getenv('NEXT_PUBLIC_SUPABASE_URL')
SUPABASE_SERVICE_KEY = os.getenv('SUPABASE_SERVICE_ROLE_KEY')

supabase: Client = create_client(SUPABASE_URL, SUPABASE_SERVICE_KEY)

print("üîç Verificando fun√ß√µes de auto-instala√ß√£o do Prophet...\n")

# Query para verificar se as fun√ß√µes existem
check_functions_query = """
SELECT 
    n.nspname as schema_name,
    p.proname as function_name,
    pg_get_function_identity_arguments(p.oid) as arguments
FROM pg_proc p
JOIN pg_namespace n ON n.oid = p.pronamespace
WHERE p.proname IN ('install_prophet_agent_for_user', 'run_new_user_setup')
ORDER BY n.nspname, p.proname;
"""

try:
    # Executar query usando RPC (n√£o h√° m√©todo direto para queries SQL personalizadas)
    # Vamos verificar de outra forma
    
    print("üìä Verificando triggers na tabela auth.users...")
    
    # Verificar se o trigger existe
    check_trigger_query = """
    SELECT 
        trigger_name,
        event_manipulation,
        event_object_table,
        action_statement
    FROM information_schema.triggers
    WHERE event_object_schema = 'auth' 
    AND event_object_table = 'users'
    AND trigger_name = 'on_new_user_created';
    """
    
    print("\nüìä Verificando se a fun√ß√£o install_prophet_agent_for_user est√° sendo chamada...")
    
    # Vamos verificar indiretamente criando um usu√°rio de teste
    print("\nüß™ Teste indireto:")
    print("   - Se novos usu√°rios est√£o sendo criados sem Prophet, pode ser que:")
    print("     1. As migrations n√£o foram aplicadas")
    print("     2. O trigger est√° desabilitado")
    print("     3. H√° um erro na fun√ß√£o")
    
    # Verificar quando foi a √∫ltima vez que um Prophet foi criado
    result = supabase.table('agents').select('created_at, account_id').eq('name', 'Prophet').order('created_at', desc=True).limit(5).execute()
    
    if result.data:
        print(f"\nüìÖ √öltimos 5 agentes Prophet criados:")
        for agent in result.data:
            print(f"   - {agent['created_at']} (account: {agent['account_id']})")
    else:
        print("\n‚ö†Ô∏è  Nenhum agente Prophet encontrado no banco!")
        
    # Verificar se h√° erros recentes
    print("\nüí° Sugest√µes:")
    print("   1. Verifique se as migrations foram aplicadas corretamente")
    print("   2. Execute manualmente as migrations SQL")
    print("   3. Verifique os logs do Supabase para erros")
    
except Exception as e:
    print(f"‚ùå Erro: {e}")

print("\n‚úÖ Verifica√ß√£o conclu√≠da!")
print("\nüìù Para corrigir o problema de auto-instala√ß√£o:")
print("   1. Execute as migrations SQL manualmente no Supabase Dashboard")
print("   2. Ou use o script install_prophet_for_user.py para instalar manualmente")